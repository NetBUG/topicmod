NSF Visualization Web App Guide

*** Before you build ***

1) In the build.properties file, set the value of the tomcat.lib variable to point to the library directory of your Tomcat installation.
Example entry (points to the proper location on ITM):
	tomcat.lib=/opt/UMtomcat6/lib/

2) Copy the NSFVis.properties and datasets.csv files to a world-readable location of your choice. Then go to src/utils/Constants.java, and edit the PROPERTIES_FILE and DATASET_FILE constants to point to these locations.
	NOTE: You need to recompile when changing the code, but NOT when changing the contents of NSFVis.properties or datasets.csv as in steps (3) and (4).

3) Change the values of other constants in src/utils/Constants.java as desired. These constants include the number of LDA iterations to run; the number of words to display in various areas; and the number of "junk" stopword topics to throw away (the default here is 0). Comments in the source file explain what each constant is for.
	
4) Edit the variables specified in NSFVis.properties. See the comments in the NSFVis.properties file itself for an explanation of what each variable does.
	
5) Add data set information to datasets.csv. See "Adding a new data set" below for instructions.

6) Compile and deploy!

*** Compiling and Deploying ***

ant clean: cleans out existing build file stuff
ant package: compiles everything and packages up the WAR file

NOTE: If you get a "build failed" error, make sure that tomcat.lib variable has been set properly in build.properties! See step (1) above.

How to replace the NSFVis WAR file:

1) Stop Tomcat:
	/var/lib/UMtomcat6/itm/bin/catalina-wrapper.sh stop force
2) Delete the old web app directory:
	rm -r /var/lib/UMtomcat6/itm/webapps/NSFVis*
3) Copy the new WAR file:
	cp <location>/NSFVis.war /var/lib/UMtomcat6/itm/webapps/
4) Start Tomcat:
	/var/lib/UMtomcat6/itm/bin/catalina-wrapper.sh start

*** Adding a new data set ***

This guide assumes that your data set is organized in plain-text files, with one document per file. If not, you'll need to convert it to this form in order to use the DataImporter tool described below.

1) Run the data set through the DataImporter tool, located in [SVN root]/topics/topicmod/projects/DataImporter. Read the readme.text file in this directory for instructions on how to run DataImporter. The output should be a folder containing some protocol buffer files and a vocabulary (.voc) file. Place the folder in a world-readable location of your choice.

2) Add a new line to the datasets.csv file (described in step 2 of "Before you build") to represent this data set. Each line describes one data set and contains the following columns, separated by commas:
	- Data set name
	- Location of the protocol buffer index file (this is the file ending with .index that was generated by DataImporter)
	- Location of the vocabulary (.voc) file
	- Location of the noun phrase file, which is just a list (one per line) of the noun phrases in the corpus. If you don't want to generate this, just create a blank file and put its location here. The only negative effect will be that the "Noun Phrase" display option in the visualization won't work.
	- The next column should be "true" (no quotes) if the .index file gives the absolute path of each document, and "false" otherwise (that is, if it gives the relative path). Index files generated with DataImporter use relative paths (so you should put "false").
	- Finally, a list of all the years present in the data files, separated by commas; the readme for DataImporter shows how to label the data files with years. Example entry: 1990,1991,1993,1994
	
Each of these columns can contain spaces, but NOT commas or newline characters. The datasets.csv file checked into SVN provides some example entries.
